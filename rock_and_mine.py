# -*- coding: utf-8 -*-
"""ROCK AND MINE

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14nttBQinUjFb1RpGQb4R0tqyZvcieRRU
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

df = pd.read_csv("sonar data.csv", header=None)

df.head()

df.shape

df.describe()

df[2].value_counts()

df.groupby(2).mean()

x = df.drop(columns=60, axis=1)
y = df[60]

threshold = 0.5  # Define a threshold value
y_discrete = ['R' if label >= threshold else 'M' for label in y]

print(x)
print(y)

x_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.1, stratify=y, random_state=1)

print(x.shape, x_train.shape,x_test.shape)

model = LogisticRegression()
model.fit(x_train, y_train)

x_train_prediction = model.predict(x_train)
tr = accuracy_score(x_train_prediction, y_train)

print("Accuracy",tr)

x_test_prediction = model.predict(x_test)
tr1 = accuracy_score(x_test_prediction, y_test)

input_data = (0.0307,0.0523)

input_data_as_numpy_array = np.asarray(input_data)

input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = model.predict(input_data_reshaped)
print(prediction)

if (prediction[0]=='R'):
  print('The object is a Rock')
else:
  print('The object is a mine')